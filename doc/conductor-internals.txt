Conductor : Internals

The inside of Conductor is more complicated than I initially gave credit for:

Audience<->Conductor interface:
  * Submit Request
  * Get Request Status

Conductor<->Player Interface:
  * Player Ready for Request:
  * Conductor Send Request to Player
  * Player Acknowledge Job
  * Player Send Result to Conductor
  * Conductor Acknowledge Result
  * Conductor NOP to Player (no Requests Available)
  * Player NOP to Conductor (I'm alive, just stalled!)

Internally:

  Receive Request From Audience:
  * Enqueue Request into Master Job List.
    * Master Job Manager dequeues from Master Job List
    * 


C<->P pkt format:

All BE.

struct {
       byte	type
       uint16	len
       byte	payload[len]
}	

type ->
     NOP -> 0
     PLAY_REQ -> 1
     REQ -> 2
     ACK_REQ -> 3
     PLAY_RES -> 4
     ACK_RES -> 5

  * Player Ready for Request: (PLAY_REQ)
  * Conductor Send Request to Player (REQ)
  * Player Acknowledge Job (ACK_REQ)
  * Player Send Result to Conductor (PLAY_RES)
  * Conductor Acknowledge Result (ACK_RES)
  * Conductor NOP to Player (no Requests Available) (NOP)
  * Player NOP to Conductor (I'm alive, just stalled!) (NOP)
     
